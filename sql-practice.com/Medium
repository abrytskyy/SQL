--1?
Show unique birth years from patients and order them by ascending.
--1
SELECT DISTINCT year(birth_date) FROM patients
order by year(birth_date)



--2?
Show unique first names from the patients table which only occurs once in the list.

For example, if two or more people are named 'John' in the first_name column then don't include 
their name in the output list. If only 1 person is named 'Leo' then include them in the output.
--2
SELECT  first_name FROM patients
group by first_name
having count(*) = 1
--2
SELECT first_name
FROM (
    SELECT
      first_name,
      count(first_name) AS occurrencies
    FROM patients
    GROUP BY first_name
  )
WHERE occurrencies = 1



--3?
Show patient_id and first_name from patients where their first_name start and ends with 's' and is at least 6 characters long.
--3
SELECT  patient_id, first_name FROM patients
where first_name like 'S%s' and length(first_name) >= 6
--3
SELECT
  patient_id,
  first_name
FROM patients
WHERE
  first_name LIKE 's%s'
  AND len(first_name) >= 6
--3
SELECT
  patient_id,
  first_name
FROM patients
where
  first_name like 's%'
  and first_name like '%s'
  and len(first_name) >= 6
--3
SELECT
  patient_id,
  first_name
FROM patients
WHERE first_name LIKE 's____%s'



--4?
Show patient_id, first_name, last_name from patients whos diagnosis is 'Dementia'.
Primary diagnosis is stored in the admissions table.
--4
select p.patient_id, first_name, last_name from patients p 
join admissions a 
on p.patient_id = a.patient_id
where diagnosis = 'Dementia'
--4
SELECT
  patient_id,
  first_name,
  last_name
FROM patients
WHERE patient_id IN (
    SELECT patient_id
    FROM admissions
    WHERE diagnosis = 'Dementia'
  )



--5?
Display every patient's first_name.
Order the list by the length of each name and then by alphbetically
--5
SELECT  first_name FROM patients
order by len(first_name), first_name



--6?
Show the total amount of male patients and the total amount of female patients in the patients table.
Display the two results in the same row.
--6
select (select count(*) from patients where gender='M') total_male,
(select count(*) from patients where gender='F') total_female
--6
SELECT 
  (SELECT count(*) FROM patients WHERE gender='M') AS male_count, 
  (SELECT count(*) FROM patients WHERE gender='F') AS female_count
--6
SELECT 
  SUM(Gender = 'M') as male_count, 
  SUM(Gender = 'F') AS female_count
FROM patients
--6
SELECT 
  SUM(Gender = 'M') as male_count, 
  SUM(Gender = 'F') AS female_count
FROM patients
--6
select 
  sum(case when gender = 'M' then 1 end) as male_count,
  sum(case when gender = 'F' then 1 end) as female_count 
from patients



--7?
Show first and last name, allergies from patients which have allergies to either 'Penicillin' or 
'Morphine'. Show results ordered ascending by allergies then by first_name then by last_name.
--7
select first_name, last_name, allergies from patients
where allergies IN ('Penicillin', 'Morphine')
order by allergies, first_name, last_name
--7
SELECT
  first_name,
  last_name,
  allergies
FROM
  patients
WHERE
  allergies = 'Penicillin'
  OR allergies = 'Morphine'
ORDER BY
  allergies ASC,
  first_name ASC,
  last_name ASC



--8?
Show patient_id, diagnosis from admissions. Find patients admitted multiple times for the same diagnosis.
--8
SELECT patient_id, diagnosis FROM admissions
group by patient_id, diagnosis
having count(*) > 1



--9?
Show the city and the total number of patients in the city.
Order from most to least patients and then by city name ascending.
--9
SELECT city, count(distinct patient_id) as total_patients FROM patients
group by city
order by total_patients desc, city



--10?
Show first name, last name and role of every person that is either patient or doctor.
The roles are either "Patient" or "Doctor"
--10
select first_name, last_name, 'Patient' as role from patients
union all 
select first_name, last_name, 'Doctor' as role from doctors



--11?
Show all allergies ordered by popularity. Remove NULL values from query.
--11
SELECT allergies, count(*) as popularity FROM patients
where allergies is not NULL
group by allergies
order by 2 desc
--11
SELECT allergies, count(*) FROM patients
WHERE allergies NOT NULL
GROUP BY allergies
ORDER BY count(*) DESC
--11
SELECT allergies, count(allergies) AS total_diagnosis
FROM patients
GROUP BY allergies
HAVING
  allergies IS NOT NULL
ORDER BY total_diagnosis DESC



--12?
Show all patient's first_name, last_name, and birth_date who were born 
in the 1970s decade. Sort the list starting from the earliest birth_date.
--12
SELECT first_name, last_name, birth_date FROM patients
where birth_date between '1970-01-01' and '1979-12-31'
order by birth_date 
--12
SELECT
  first_name,
  last_name,
  birth_date
FROM patients
WHERE
  birth_date >= '1970-01-01'
  AND birth_date < '1980-01-01'
ORDER BY birth_date ASC
--12
SELECT
  first_name,
  last_name,
  birth_date
FROM patients
WHERE year(birth_date) LIKE '197%'
ORDER BY birth_date ASC
--12
SELECT
  first_name,
  last_name,
  birth_date
FROM patients
WHERE
  YEAR(birth_date) BETWEEN 1970 AND 1979
ORDER BY birth_date ASC



-13?
We want to display each patient's full name in a single column. Their last_name in all 
upper letters must appear first, then first_name in all lower case letters. Separate the 
last_name and first_name with a comma. Order the list by the first_name in decending order 
EX: SMITH,jane
--13
select upper(last_name)||','||LOWER(first_name) as full_name from patients
order by first_name desc
--13
SELECT
  CONCAT(UPPER(last_name), ',', LOWER(first_name)) AS new_name_format
FROM patients
ORDER BY first_name DESC



--14?
Show the province_id(s), sum of height; where the total sum of its patient's height is greater 
than or equal to 7,000.
--14
SELECT province_id, sum(height) as sum_hight FROM patients
group by province_id
having sum_hight>=7000



--15?
Show the difference between the largest weight and smallest weight for patients with the 
last name 'Maroni'
--15
select (max(weight)-min(weight)) as difference from patients
where last_name = 'Maroni'



--16?
Show all of the days of the month (1-31) and how many admission_dates occurred on that day. 
Sort by the day with most admissions to least admissions.
--16
SELECT day(admission_date), count(*) FROM admissions
group by day(admission_date)
order by count(*) desc



--17?
Show all columns for patient_id 542's most recent admission_date.
--17
SELECT * FROM admissions
where patient_id = 542 and 
 admission_date = 
 (select max(admission_date) from admissions group by patient_id having patient_id = 542)
--17
SELECT *
FROM admissions
WHERE patient_id = 542
GROUP BY patient_id
HAVING
  admission_date = MAX(admission_date)
--17
SELECT *
FROM admissions
WHERE
  patient_id = '542'
  AND admission_date = (
    SELECT MAX(admission_date)
    FROM admissions
    WHERE patient_id = '542'
  )
--17
SELECT *
FROM admissions
WHERE patient_id = 542
ORDER BY admission_date DESC
LIMIT 1
--17
SELECT *
FROM admissions
GROUP BY patient_id
HAVING
  patient_id = 542
  AND max(admission_date)



--18?
Show patient_id, attending_doctor_id, and diagnosis for admissions that match one of the two criteria:
1. patient_id is an odd number and attending_doctor_id is either 1, 5, or 19.
2. attending_doctor_id contains a 2 and the length of patient_id is 3 characters.
--18
SELECT patient_id, attending_doctor_id, diagnosis FROM admissions
where (patient_id % 2 = 1 and attending_doctor_id IN (1, 5, 19))
	or (attending_doctor_id like '%2%' and len(patient_id) = 3)
--18
SELECT
  patient_id,
  attending_doctor_id,
  diagnosis
FROM admissions
WHERE
  (
    attending_doctor_id IN (1, 5, 19)
    AND patient_id % 2 != 0
  )
  OR 
  (
    attending_doctor_id LIKE '%2%'
    AND len(patient_id) = 3
  )



--19?
Show first_name, last_name, and the total number of admissions attended for each doctor.
Every admission has been attended by a doctor.
--19
select first_name, last_name, count(*) number_admisions from doctors d 
join admissions a 
on d.doctor_id = a.attending_doctor_id
group by first_name, last_name
--19
SELECT
  first_name,
  last_name,
  count(*) as admissions_total
from admissions a
  join doctors ph on ph.doctor_id = a.attending_doctor_id
group by attending_doctor_id
--19
SELECT
  first_name,
  last_name,
  count(*)
from
  doctors p,
  admissions a
where
  a.attending_doctor_id = p.doctor_id
group by p.doctor_id


